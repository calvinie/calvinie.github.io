import{_ as t,X as r,Y as l,$ as o,a0 as a,a1 as s,Z as n,C as p}from"./framework-3ae3a606.js";const c={},d=n('<h1 id="常用开发库-lombok工具库详解" tabindex="-1"><a class="header-anchor" href="#常用开发库-lombok工具库详解" aria-hidden="true">#</a> 常用开发库 - Lombok工具库详解</h1><blockquote><p>Lombok是一款非常实用Java工具，可用来帮助开发人员消除Java的冗长代码，尤其是对于简单的Java对象（POJO）。实际上我并不推荐使用Lombok（不主动使用它）, 但是因为它有着很大的使用量，我们仍然有必要掌握它，不仅知道如何使用和它解决的问题，还要知道它的坑。</p></blockquote><h2 id="lombok的引入" tabindex="-1"><a class="header-anchor" href="#lombok的引入" aria-hidden="true">#</a> Lombok的引入</h2><p>我们通常需要编写大量代码才能使类变得有用。如以下内容：</p><ul><li><code>toString()</code>方法</li><li><code>hashCode()</code> and <code>equals()</code>方法</li><li><code>Getter</code> and <code>Setter</code>方法</li><li>构造函数</li></ul><p>对于这种简单的类，这些方法通常是无聊的、重复的，而且是可以很容易地机械地生成的那种东西(ide通常提供这种功能)。</p><h3 id="在引入lombok之前我们是怎么做的" tabindex="-1"><a class="header-anchor" href="#在引入lombok之前我们是怎么做的" aria-hidden="true">#</a> 在引入Lombok之前我们是怎么做的</h3><p>IDE中添加getter/setter, toString等代码</p><h2 id="lombok的安装和使用" tabindex="-1"><a class="header-anchor" href="#lombok的安装和使用" aria-hidden="true">#</a> Lombok的安装和使用</h2><blockquote><p>下面总结下如何使用。</p></blockquote><h3 id="lombok官网" tabindex="-1"><a class="header-anchor" href="#lombok官网" aria-hidden="true">#</a> Lombok官网</h3>',11),i={href:"https://projectlombok.org",target:"_blank",rel:"noopener noreferrer"},k=n(`<h3 id="lombok安装" tabindex="-1"><a class="header-anchor" href="#lombok安装" aria-hidden="true">#</a> Lombok安装</h3><p>IDEA搜索Lombok插件</p><p>另外需要注意的是，在使用lombok注解的时候记得要导入lombok.jar包到工程，如果使用的是Maven的工程项目的话，要在其pom.xml中添加依赖如下</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span>
<span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span><span class="token number">1.18</span><span class="token number">.12</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>scope<span class="token operator">&gt;</span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="lombok注解说明" tabindex="-1"><a class="header-anchor" href="#lombok注解说明" aria-hidden="true">#</a> Lombok注解说明</h3>`,5),h={href:"https://projectlombok.org/features/",target:"_blank",rel:"noopener noreferrer"},m=o("ul",null,[o("li",null,[o("code",null,"val"),a("：用在局部变量前面，相当于将变量声明为final")])],-1),b=o("h2",{id:"参考文章",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#参考文章","aria-hidden":"true"},"#"),a(" 参考文章")],-1),u=o("ul",null,[o("li",null,"https://projectlombok.org/")],-1);function v(_,g){const e=p("ExternalLinkIcon");return r(),l("div",null,[d,o("p",null,[o("a",i,[a("Lombok官网"),s(e)])]),k,o("p",null,[o("a",h,[a("Lombok官网"),s(e)])]),m,b,u])}const x=t(c,[["render",v],["__file","lombok.html.vue"]]);export{x as default};
